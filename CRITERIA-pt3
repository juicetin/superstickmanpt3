Changes/notes to mention
	- fixed memory leaks
	- refactored gargantuan Dialog class - moved everything into a Game object with a GameBuilder
	- load levels on the fly, only as current stage is finished

* Adding user control for rate at which the character moves
* Ability to lose - crashing into obstacles will result in loss of life
* Ability to win - obstacles should no longer repeat 
	- there should be checkpoins to take you to new levels, and finally win
* Ability to provide score to user
* Powerups - should transform stickman into their four personas each which
  	should provide a possible advantage

PASSING GRADE (50%)
DONE* must compile and run in lab (but may use own laptop)
DONE* preserve previous two stages' functionality
DONE* appropriate use of a behavioural design pattern
		---observer, command
DONE* clear code, meaningful variable/method names, informative commenting and
		documentation
DONE* stickman must have configurable number of lives
DONE* when stickman intersects with an obstacle they lose a life and restart the
		level
DONE* score must be displayed, showing how well the player is doing (this could
		be as simple a a timer or as complex as you like)

CREDIT (65%)
DONE* user control over the stickman - left and right keys will control
		character, which will then in turn move background/obstacles
DONE* there must be levels (at least 2) and therefore must be checkpoints that
		you can reach in each level to move you onto the next
	* a memory efficient design
		---Loading levels only as previous ones are completed (only thing that is
			stored are the paths to configs for following levels) - very efficient
			in the sense that a theoretically near-infinite number of levels can
			be stored as there won't be X level objects all generated and stored 
			at the very beginning
		---QtCreator valgrind - no memory leaks
		---Uses a list for storing powerups - constant erases, vector requires
			a lot of memory shifting

DISTINCTION (75%)
	* include power-ups: the power-ups should alternate the stickman between
		its four states. TINY mode should permit you to walk underneath some
		obstacles, LARGE should permit you to jump higher than normal mode, 
		and GIANT mode should make you immune to obstacles - i.e. explode on
		impact
	* a sensible testing framework for your code

HIGH DISTINCTION (85%)
	* further power-ups (no)
	* infinite levels
		===dynamically generate new levels
	* a scoreboard that persists between games
	* more things with exclamation marks!
	